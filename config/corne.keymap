#define ZMK_POINTING_DEFAULT_MOVE_VAL 1100  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

&mmv { acceleration-exponent = <1>; };

&msc {
    time-to-max-speed-ms = <150>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hml: homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            timeout-ms = <100>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <10 9>;
            require-prior-idle-ms = <100>;
        };

        Caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 19>;
        };

        NavTog {
            bindings = <&tog 3>;
            key-positions = <40 38>;
            layers = <3 1 0 4>;
        };

        SymbolToggle {
            bindings = <&tog 2>;
            key-positions = <41 37>;
            layers = <3 1 0 4>;
        };

        NumToggle {
            bindings = <&tog 1>;
            key-positions = <41 36>;
            layers = <3 1 0 4>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            timeout-ms = <100>;
        };

        Def {
            bindings = <&personal>;
            key-positions = <2 41 9>;
        };

        Mem {
            bindings = <&work>;
            key-positions = <27 9 41>;
        };
    };

    //

    macros {
        work: work {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp AT &kp LS(M) &kp NUMBER_3 &kp M &kp N &kp N0 &kp C &kp H &kp N0 &kp NUMBER_3 &kp N6 &kp N9 &kp EXCL>;
            label = "WORK";
        };

        personal: perso {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(D) &kp N3 &kp F &kp Q &kp N0 &kp N &kp N1 &kp EXCL &kp N2 &kp N1 &kp N1 &kp N2>;
            label = "PERSO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        KeyPress {
            display-name = "KYP";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q         &kp D            &kp R         &kp W              &kp B           &kp J      &kp F               &kp U         &kp P             &kp BACKSPACE  &none
&none  &hml COLON A  &hml LEFT_ALT S  &hml LCTRL H  &hml LEFT_SHIFT T  &kp G           &kp Y      &hml RIGHT_SHIFT N  &hml RCTRL E  &hml RIGHT_ALT O  &hml SEMI I    &none
&none  &hml LC(Z) Z  &hml LC(X) X     &kp M         &hml LC(C) C       &hml LC(V) V    &kp K      &kp L               &kp COMMA     &kp DOT           &kp SLASH      &none
                                      &mo 1         &mo 2              &mo 3           &kp SPACE  &kp ENTER           &kp LEFT_GUI
            >;

            label = "KeyPress";
        };

        Numpad {
            label = "Numpad";
            display-name = "NUM";
            bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4   &kp LA(LEFT_GUI)    &kp EQUAL     &kp N7        &kp N8        &kp N9        &kp PLUS   &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &kp LEFT_GUI        &kp PERIOD    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none               &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK  &none
                        &trans   &trans   &trans              &trans        &trans        &trans
            >;
        };

        Symbol {
            label = "Symbol";
            display-name = "SYM";
            bindings = <
&none  &kp SINGLE_QUOTE  &kp TILDE       &kp EXCL          &kp AT                &kp POUND         &kp DOLLAR       &kp PERCENT            &kp CARET          &kp AMPERSAND    &kp DOUBLE_QUOTES  &none
&none  &kp UNDER         &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp UP_ARROW      &kp DOWN         &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp MINUS          &none
&none  &kp KP_DIVIDE     &kp PIPE        &kp KP_SUBTRACT   &kp PLUS              &kp LEFT_ARROW    &kp RIGHT_ARROW  &kp BACKSLASH          &kp EQUAL          &kp GRAVE        &kp ASTRK          &none
                                         &trans            &trans                &trans            &trans           &trans                 &trans
            >;
        };

        Navigation {
            label = "Navigation";
            display-name = "NAV";
            bindings = <
&none  &kp C_BRI_UP   &mkp LCLK       &msc SCRL_UP    &mkp RCLK        &kp LCTRL         &kp PRINTSCREEN  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &kp C_VOLUME_UP    &none
&none  &kp C_BRI_DEC  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp UP_ARROW      &kp DOWN         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp C_VOLUME_DOWN  &none
&none  &kp LEFT_GUI   &kp LC(Z)       &kp LG(C)       &kp LG(P)        &kp LEFT_ARROW    &kp RIGHT_ARROW  &kp K_BACK      &mmv MOVE_DOWN  &kp K_FORWARD    &kp K_MUTE         &none
                                      &trans          &trans           &trans            &trans           &trans          &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
